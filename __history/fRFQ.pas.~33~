unit fRFQ;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, cxGraphics, cxControls, cxLookAndFeels,
  cxLookAndFeelPainters, cxStyles, dxSkinsCore, dxSkinBlack, dxSkinBlue,
  dxSkinBlueprint, dxSkinCaramel, dxSkinCoffee, dxSkinDarkRoom, dxSkinDarkSide,
  dxSkinDevExpressDarkStyle, dxSkinDevExpressStyle, dxSkinFoggy,
  dxSkinGlassOceans, dxSkinHighContrast, dxSkiniMaginary, dxSkinLilian,
  dxSkinLiquidSky, dxSkinLondonLiquidSky, dxSkinMcSkin, dxSkinMetropolis,
  dxSkinMetropolisDark, dxSkinMoneyTwins, dxSkinOffice2007Black,
  dxSkinOffice2007Blue, dxSkinOffice2007Green, dxSkinOffice2007Pink,
  dxSkinOffice2007Silver, dxSkinOffice2010Black, dxSkinOffice2010Blue,
  dxSkinOffice2010Silver, dxSkinOffice2013DarkGray, dxSkinOffice2013LightGray,
  dxSkinOffice2013White, dxSkinOffice2016Colorful, dxSkinOffice2016Dark,
  dxSkinPumpkin, dxSkinSeven, dxSkinSevenClassic, dxSkinSharp, dxSkinSharpPlus,
  dxSkinSilver, dxSkinSpringTime, dxSkinStardust, dxSkinSummer2008,
  dxSkinTheAsphaltWorld, dxSkinsDefaultPainters, dxSkinValentine,
  dxSkinVisualStudio2013Blue, dxSkinVisualStudio2013Dark,
  dxSkinVisualStudio2013Light, dxSkinVS2010, dxSkinWhiteprint,
  dxSkinXmas2008Blue, dxSkinscxPCPainter, cxCustomData, cxFilter, cxData,
  cxDataStorage, cxEdit, cxNavigator, Data.DB, cxDBData, cxImageComboBox,
  cxClasses, System.ImageList, Vcl.ImgList, acAlphaImageList, System.Actions,
  Vcl.ActnList, cxGridLevel, cxGridCustomTableView, cxGridTableView,
  cxGridDBTableView, cxGridCustomView, cxGrid, Vcl.ComCtrls, Vcl.ToolWin,
  scControls, Vcl.StdCtrls, Vcl.ExtCtrls;

type
  Tf_RFQ = class(TForm)
    Splitter1: TSplitter;
    Panel3: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    cmb_filter: TComboBox;
    date_1: TDateTimePicker;
    date_2: TDateTimePicker;
    txt_search: TButtonedEdit;
    scToolBar2: TscToolBar;
    ToolButton1: TToolButton;
    ToolButton2: TToolButton;
    ToolButton3: TToolButton;
    cxGrid1: TcxGrid;
    cxGrid1DBTableView1: TcxGridDBTableView;
    cxGrid1Level1: TcxGridLevel;
    ActionList1: TActionList;
    New: TAction;
    Edit: TAction;
    Delete: TAction;
    sCharImageList1: TsCharImageList;
    ds_RFQ: TDataSource;
    cxStyleRepository1: TcxStyleRepository;
    header_style: TcxStyle;
    select_style: TcxStyle;
    cxGrid1DBTableView1ID: TcxGridDBColumn;
    cxGrid1DBTableView1CLIENT: TcxGridDBColumn;
    cxGrid1DBTableView1REMARKS: TcxGridDBColumn;
    cxGrid1DBTableView1CREATEDDATETIME: TcxGridDBColumn;
    cxGrid1DBTableView1SUMMARY: TcxGridDBColumn;
    cxGrid1DBTableView1TOTAL: TcxGridDBColumn;
    procedure NewExecute(Sender: TObject);
    procedure EditExecute(Sender: TObject);
    procedure DeleteExecute(Sender: TObject);
    procedure txt_searchKeyPress(Sender: TObject; var Key: Char);
    procedure txt_searchRightButtonClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }
    procedure search;
    procedure loaddetails;
  public
    { Public declarations }
  end;

var
  f_RFQ: Tf_RFQ;

implementation

uses DateUtils, dmPM, fRFQDetail;

{$R *.dfm}

procedure Tf_RFQ.DeleteExecute(Sender: TObject);
begin
  with dm_PM do
  begin
    if brw_RFQID.Value > 0 then
    begin
      if MessageDlg('Do you want to delete this record?', mtConfirmation, [mbYes, mbNo], 0) = mrYes then
      begin
        qry_RFQ.Close;
        qry_RFQ.SQL[2] := 'WHERE ID = :ID';
        qry_RFQ.ParamByName('ID').Value  := brw_RFQID.Value;
        qry_RFQ.Open();

        if qry_RFQ.RecordCount > 0 then
        begin

          qry_RFQ.Edit;
          qry_RFQCANCELLED.Value         := True;
          qry_RFQCANCELLEDBYID.Value     := userid;
          qry_RFQCANCELLEDDATETIME.Value := Now;
          qry_RFQ.Post;
          qry_RFQ.ApplyUpdates();

          del_RFQDetail.Close;
          del_RFQDetail.SQL[1] := 'SET CANCELLED = TRUE,';
          del_RFQDetail.SQL[2] := 'CANCELLEDBYID = '+IntToStr(userid)+',';
          del_RFQDetail.SQL[3] := 'CANCELLEDDATETIME = '+''''+FormatDateTime('yyyy-mm-dd hh:nn:ss', Now)+'''';
          del_RFQDetail.SQL[4] := 'WHERE HEADERID = '+brw_RFQID.AsString;
          del_RFQDetail.ExecSQL;

          MessageDlg('Record has been deleted.', mtInformation, [mbOK], 0);

          search;
        end;
      end;
    end
    else
    MessageDlg('Empty Record. Nothing to delete.', mtError, [mbOK], 0);
  end;
end;

procedure Tf_RFQ.EditExecute(Sender: TObject);
var particulars: string;
total : Real;
begin
  with dm_PM do
  begin

    qry_RFQ.Close;
    qry_RFQ.SQL[2] := 'WHERE ID = :ID';
    qry_RFQ.ParamByName('ID').Value    := brw_RFQID.Value;
    qry_RFQ.Open();

    qry_RFQ.Edit;
    qry_RFQCANCELLED.Value       := False;
    qry_RFQUPDATEDBYID.Value     := userid;
    qry_RFQUPDATEDDATETIME.Value := Now;

    tb_RFQDetail.Close;
    tb_RFQDetail.Open;

    qry_RFQDetail.Close;
    qry_RFQDetail.SQL[2] := 'WHERE HEADERID = :ID AND CANCELLED = FALSE';
    qry_RFQDetail.ParamByName('ID').Value    := brw_RFQID.Value;
    qry_RFQDetail.Open();

    if qry_RFQDetail.RecordCount > 0 then
    begin
      qry_RFQDetail.First;

      while not qry_RFQDetail.Eof do
      begin

        tb_RFQDetail.Append;
        tb_RFQDetailID.Value             := qry_RFQDetailID.Value;
        tb_RFQDetailDESCRIPTION.Value    := qry_RFQDetailDESCRIPTION.Value;
        tb_RFQDetailFABRICID.Value       := qry_RFQDetailFABRICID.Value;
        tb_RFQDetailFABRIC.Value         := qry_RFQDetailFABRIC.Value;
        tb_RFQDetailITEMID.Value         := qry_RFQDetailITEMID.Value;
        tb_RFQDetailREMARKS.Value        := qry_RFQDetailREMARKS.Value;
        tb_RFQDetail.Post;

        qry_RFQDetail.Next;
      end;
    end;

    loaddetails;

    f_RFQTemp  := Tf_RFQTemp.Create(Self);
    f_RFQTemp.Caption  := 'Edit Quotation';
    if f_RFQTemp.ShowModal = mrOk then
    begin

      qry_RFQ.Post;
      qry_RFQ.ApplyUpdates();

      tb_RFQDetail.First;

      total := 0;

      while not tb_RFQDetail.Eof do
      begin
        total := total + tb_RFQDetailTOTAL.Value;

        if tb_RFQDetail.RecNo <> tb_RFQDetail.RecordCount then
        particulars := particulars + tb_RFQDetailDESCRIPTION.AsString + ' ('+tb_RFQDetailFABRIC.AsString+ ') ' + #13#10
        else
        particulars := particulars + tb_RFQDetailDESCRIPTION.AsString + ' ('+tb_RFQDetailFABRIC.AsString+ ') ';

        qry_RFQDetail.Close;
        if tb_RFQDetailID.IsNull then
        qry_RFQDetail.SQL[2] := 'WHERE ID = 0'
        else
        begin
          qry_RFQDetail.SQL[2] := 'WHERE ID = :ID';
          qry_RFQDetail.ParamByName('ID').Value   := tb_RFQDetailID.Value;
        end;
        qry_RFQDetail.Open();

        if tb_RFQDetailID.IsNull then
        qry_RFQDetail.Append
        else
        qry_RFQDetail.Edit;

        qry_RFQDetailHEADERID.Value    := qry_RFQID.Value;
        qry_RFQDetailITEMID.Value      := tb_RFQDetailITEMID.Value;
        qry_RFQDetailFABRICID.Value    := tb_RFQDetailFABRICID.Value;
        qry_RFQDetailDESCRIPTION.Value := tb_RFQDetailDESCRIPTION.Value;
        qry_RFQDetailREMARKS.Value     := tb_RFQDetailREMARKS.Value;
        qry_RFQDetailCANCELLED.Value   := False;
        qry_RFQDetailFABRIC.Value      := tb_RFQDetailFABRIC.Value;
        qry_RFQDetailUNIT.Value        := tb_RFQDetailUNIT.Value;
        qry_RFQDetailQTY.Value         := tb_RFQDetailQTY.Value;
        qry_RFQDetailCOST.Value        := tb_RFQDetailCOST.Value;
        qry_RFQDetailTOTAL.Value       := tb_RFQDetailTOTAL.Value;
        qry_RFQDetail.Post;
        qry_RFQDetail.ApplyUpdates();

        tb_RFQDetail.Next;
      end;

      upd_RFQ.Close;
      upd_RFQ.SQL[1] := 'SET PARTICULARS  = '''+particulars+''',';
      upd_RFQ.SQl[2] := 'TOTAL = '+FloatToStr(total)+'';
      upd_RFQ.SQL[3] := 'WHERE ID = '+IntToStr(qry_RFQID.Value);
      upd_RFQ.ExecSQL;
    end;

    search;
  end;
end;

procedure Tf_RFQ.FormShow(Sender: TObject);
begin
  date_1.Date := StartOfTheMonth(Now);
  date_2.Date := Now;
  cmb_filter.ItemIndex  := 0;
  search;
end;

procedure Tf_RFQ.loaddetails;
begin
  with dm_PM do
  begin
    brw_Garments.Close;
    brw_Garments.SQL[2] := 'WHERE CANCELLED = FALSE';
    brw_Garments.Open();

    brw_GarmentDesc.Close;
    brw_GarmentDesc.SQL[3]  := 'WHERE GAR.CANCELLED = FALSE';
    brw_GarmentDesc.Open();

    brw_Fabrics.Close;
    brw_Fabrics.SQL[2]  := 'WHERE CANCELLED = FALSE';
    brw_Fabrics.Open();
  end;
end;

procedure Tf_RFQ.NewExecute(Sender: TObject);
var particulars: string;
total : Real;
begin
  with dm_PM do
  begin

    qry_RFQ.Close;
    qry_RFQ.SQL[2] := 'WHERE ID = 0';
    qry_RFQ.Open();

    qry_RFQ.Append;
    qry_RFQCANCELLED.Value       := False;
    qry_RFQCREATEDBYID.Value     := userid;
    qry_RFQCREATEDDATETIME.Value := Now;

    tb_RFQDetail.Close;
    tb_RFQDetail.Open;

    loaddetails;

    f_RFQTemp  := Tf_RFQTemp.Create(Self);
    f_RFQTemp.Caption  := 'New Layout';
    if f_RFQTemp.ShowModal = mrOk then
    begin

      qry_RFQSUMMARY.Value   := ' ';
      qry_RFQ.Post;
      qry_RFQ.ApplyUpdates();

      total := 0;

      tb_RFQDetail.First;

      while not tb_RFQDetail.Eof do
      begin
        total := total + tb_RFQDetailTOTAL.Value;

        if tb_RFQDetail.RecNo <> tb_RFQDetail.RecordCount then
        particulars := particulars + tb_RFQDetailDESCRIPTION.AsString + ' ('+tb_RFQDetailFABRIC.AsString+ ') ' + #13#10
        else
        particulars := particulars + tb_RFQDetailDESCRIPTION.AsString + ' ('+tb_RFQDetailFABRIC.AsString+ ') ';

        qry_RFQDetail.Close;
        qry_RFQDetail.SQL[2] := 'WHERE ID = 0';
        qry_RFQDetail.Open();

        qry_RFQDetail.Append;
        qry_RFQDetailHEADERID.Value       := qry_RFQID.Value;
        qry_RFQDetailITEMID.Value         := tb_RFQDetailITEMID.Value;
        qry_RFQDetailFABRICID.Value       := tb_RFQDetailFABRICID.Value;
        qry_RFQDetailDESCRIPTION.Value    := tb_RFQDetailDESCRIPTION.Value;
        qry_RFQDetailREMARKS.Value        := tb_RFQDetailREMARKS.Value;
        qry_RFQDetailCANCELLED.Value      := False;
        qry_RFQDetailFABRIC.Value         := tb_RFQDetailFABRIC.Value;
        qry_RFQDetailUNIT.Value           := tb_RFQDetailUNIT.Value;
        qry_RFQDetailQTY.Value            := tb_RFQDetailQTY.Value;
        qry_RFQDetailCOST.Value           := tb_RFQDetailCOST.Value;
        qry_RFQDetailTOTAL.Value          := tb_RFQDetailTOTAL.Value;
        qry_RFQDetail.Post;
        qry_RFQDetail.ApplyUpdates();

        tb_RFQDetail.Next;
      end;

      upd_RFQ.Close;
      upd_RFQ.SQL[1] := 'SET PARTICULARS  = '''+particulars+''',';
      upd_RFQ.SQl[2] := 'TOTAL = '+FloatToStr(total)+'';
      upd_RFQ.SQL[3] := 'WHERE ID = '+IntToStr(qry_RFQID.Value);
      upd_RFQ.ExecSQL;
    end;

    search;
  end;
end;


procedure Tf_RFQ.search;
begin
  with dm_PM do
  begin
    brw_RFQ.Close;
    if cmb_filter.ItemIndex = 0 then
    begin
      brw_RFQ.SQL[2] := 'WHERE (CREATEDDATETIME BETWEEN :DATE1 AND :DATE2) AND ID LIKE :ID AND CANCELLED = FALSE';
      brw_RFQ.ParamByName('ID').Value  := '%'+Trim(txt_search.Text)+'%';
    end
    else if cmb_filter.ItemIndex = 1 then
    begin
     brw_RFQ.SQL[2] := 'WHERE (CREATEDDATETIME BETWEEN :DATE1 AND :DATE2) AND CLIENT LIKE :CLIENT AND CANCELLED = FALSE';
     brw_RFQ.ParamByName('CLIENT').Value  := '%'+Trim(txt_search.Text)+'%';
    end
    else if cmb_filter.ItemIndex = 2 then
    begin
     brw_RFQ.SQL[2] := 'WHERE (CREATEDDATETIME BETWEEN :DATE1 AND :DATE2) AND SUMMRY LIKE :DESC AND CANCELLED = FALSE';
     brw_RFQ.ParamByName('DESC').Value  := '%'+Trim(txt_search.Text)+'%';
    end;

    brw_RFQ.ParamByName('DATE1').Value := FormatDateTime('yyyy-mm-dd hh:nn', StartOfTheDay(date_1.Date));
    brw_RFQ.ParamByName('DATE2').Value := FormatDateTime('yyyy-mm-dd hh:nn', EndOfTheDay(date_2.Date));

    brw_RFQ.Open;
  end;
end;

procedure Tf_RFQ.txt_searchKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
  search;
end;

procedure Tf_RFQ.txt_searchRightButtonClick(Sender: TObject);
begin
  search;
end;

end.
