unit fLayout;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, cxGraphics, cxControls, cxLookAndFeels,
  cxLookAndFeelPainters, cxStyles, dxSkinsCore, dxSkinBlack, dxSkinBlue,
  dxSkinBlueprint, dxSkinCaramel, dxSkinCoffee, dxSkinDarkRoom, dxSkinDarkSide,
  dxSkinDevExpressDarkStyle, dxSkinDevExpressStyle, dxSkinFoggy,
  dxSkinGlassOceans, dxSkinHighContrast, dxSkiniMaginary, dxSkinLilian,
  dxSkinLiquidSky, dxSkinLondonLiquidSky, dxSkinMcSkin, dxSkinMetropolis,
  dxSkinMetropolisDark, dxSkinMoneyTwins, dxSkinOffice2007Black,
  dxSkinOffice2007Blue, dxSkinOffice2007Green, dxSkinOffice2007Pink,
  dxSkinOffice2007Silver, dxSkinOffice2010Black, dxSkinOffice2010Blue,
  dxSkinOffice2010Silver, dxSkinOffice2013DarkGray, dxSkinOffice2013LightGray,
  dxSkinOffice2013White, dxSkinOffice2016Colorful, dxSkinOffice2016Dark,
  dxSkinPumpkin, dxSkinSeven, dxSkinSevenClassic, dxSkinSharp, dxSkinSharpPlus,
  dxSkinSilver, dxSkinSpringTime, dxSkinStardust, dxSkinSummer2008,
  dxSkinTheAsphaltWorld, dxSkinsDefaultPainters, dxSkinValentine,
  dxSkinVisualStudio2013Blue, dxSkinVisualStudio2013Dark,
  dxSkinVisualStudio2013Light, dxSkinVS2010, dxSkinWhiteprint,
  dxSkinXmas2008Blue, dxSkinscxPCPainter, cxCustomData, cxFilter, cxData,
  cxDataStorage, cxEdit, cxNavigator, Data.DB, cxDBData, cxClasses,
  System.ImageList, Vcl.ImgList, acAlphaImageList, System.Actions, Vcl.ActnList,
  cxGridLevel, cxGridCustomTableView, cxGridTableView, cxGridDBTableView,
  cxGridCustomView, cxGrid, Vcl.ComCtrls, Vcl.ToolWin, scControls, Vcl.StdCtrls,
  Vcl.ExtCtrls, cxImageComboBox, cxCalendar;

type
  Tf_Layout = class(TForm)
    Splitter1: TSplitter;
    Panel3: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    cmb_filter: TComboBox;
    date_1: TDateTimePicker;
    date_2: TDateTimePicker;
    txt_search: TButtonedEdit;
    scToolBar2: TscToolBar;
    ToolButton1: TToolButton;
    ToolButton2: TToolButton;
    ToolButton3: TToolButton;
    cxGrid1: TcxGrid;
    cxGrid1DBTableView1: TcxGridDBTableView;
    cxGrid1Level1: TcxGridLevel;
    ActionList1: TActionList;
    New: TAction;
    Edit: TAction;
    Delete: TAction;
    sCharImageList1: TsCharImageList;
    ds_Layout: TDataSource;
    cxStyleRepository1: TcxStyleRepository;
    header_style: TcxStyle;
    select_style: TcxStyle;
    cxGrid1DBTableView1ID: TcxGridDBColumn;
    cxGrid1DBTableView1PARTICULARS: TcxGridDBColumn;
    cxGrid1DBTableView1NOTES: TcxGridDBColumn;
    cxGrid1DBTableView1CLIENT: TcxGridDBColumn;
    cxGrid1DBTableView1CREATEDDATETIME: TcxGridDBColumn;
    procedure FormShow(Sender: TObject);
    procedure NewExecute(Sender: TObject);
    procedure EditExecute(Sender: TObject);
    procedure DeleteExecute(Sender: TObject);
    procedure txt_searchRightButtonClick(Sender: TObject);
    procedure txt_searchKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
    procedure search;
    procedure loaddetails;
  public
    { Public declarations }
  end;

var
  f_Layout: Tf_Layout;


implementation

uses DateUtils, dmPM, fLayoutTemp;

{$R *.dfm}

procedure Tf_Layout.DeleteExecute(Sender: TObject);
begin
  with dm_PM do
  begin
    if brw_LayoutID.Value > 0 then
    begin

      if MessageDlg('Do you want to delete this record?', mtConfirmation, [mbYes, mbNo], 0) = mrYes then
      begin
        qry_Layout.Close;
        qry_Layout.SQL[2] := 'WHERE ID = :ID';
        qry_Layout.ParamByName('ID').Value  := brw_LayoutID.Value;
        qry_Layout.Open();

        if qry_Layout.RecordCount > 0 then
        begin

          qry_Layout.Edit;
          qry_LayoutCANCELLED.Value         := True;
          qry_LayoutCANCELLEDBYID.Value     := userid;
          qry_LayoutCANCELLEDDATETIME.Value := Now;
          qry_Layout.Post;
          qry_Layout.ApplyUpdates();

          del_LoDetails.Close;
          del_LoDetails.SQL[1] := 'SET CANCELLED = TRUE,';
          del_LoDetails.SQL[2] := 'CANCELLEDBYID = '+IntToStr(userid)+',';
          del_LoDetails.SQL[3] := 'CANCELLEDDATETIME = '+''''+FormatDateTime('yyyy-mm-dd hh:nn:ss', Now)+'''';
          del_LoDetails.SQL[4] := 'WHERE HEADERID = '+brw_LayoutID.AsString;
          del_LoDetails.ExecSQL;

          MessageDlg('Record has been deleted.', mtInformation, [mbOK], 0);

          search;
        end;
      end;
    end
    else
    MessageDlg('Empty Record. Nothing to delete.', mtError, [mbOK], 0);
  end;
end;

procedure Tf_Layout.EditExecute(Sender: TObject);
var particulars: string;
begin
  with dm_PM do
  begin

    qry_Layout.Close;
    qry_Layout.SQL[2] := 'WHERE ID = :ID';
    qry_Layout.ParamByName('ID').Value    := brw_LayoutID.Value;
    qry_Layout.Open();

    qry_Layout.Edit;
    qry_LayoutCANCELLED.Value       := False;
    qry_LayoutUPDATEDBYID.Value     := userid;
    qry_LayoutUPDATEDDATETIME.Value := Now;

    tb_LayoutDetail.Close;
    tb_LayoutDetail.Open;

    qry_LayoutDetail.Close;
    qry_LayoutDetail.SQL[2] := 'WHERE HEADERID = :ID AND CANCELLED = FALSE';
    qry_LayoutDetail.ParamByName('ID').Value    := qry_LayoutID.Value;
    qry_LayoutDetail.Open();

    if qry_LayoutDetail.RecordCount > 0 then
    begin
      qry_LayoutDetail.First;

      while not qry_LayoutDetail.Eof do
      begin

        tb_LayoutDetail.Append;
        tb_LayoutDetailID.Value             := qry_LayoutDetailID.Value;
        tb_LayoutDetailDESCRIPTION.Value    := qry_LayoutDetailDESCRIPTION.Value;
        tb_LayoutDetailFABRICID.Value       := qry_LayoutDetailFABRICID.Value;
        tb_LayoutDetailFABRIC.Value         := qry_LayoutDetailFABRIC.Value;
        tb_LayoutDetailITEMID.Value         := qry_LayoutDetailITEMID.Value;
        tb_LayoutDetailREMARKS.Value        := qry_LayoutDetailREMARKS.Value;
        tb_LayoutDetail.Post;

        qry_LayoutDetail.Next;
      end;
    end;

    loaddetails;

    f_LayoutTemp  := Tf_layoutTemp.Create(Self);
    f_LayoutTemp.Caption  := 'Edit Layout';
    if f_LayoutTemp.ShowModal = mrOk then
    begin

      qry_Layout.Post;
      qry_Layout.ApplyUpdates();

      tb_LayoutDetail.First;

      while not tb_LayoutDetail.Eof do
      begin
        if tb_LayoutDetail.RecNo <> tb_LayoutDetail.RecordCount then
        particulars := particulars + tb_LayoutDetailDESCRIPTION.AsString + ' ('+tb_LayoutDetailFABRIC.AsString+ ') ' + #13#10
        else
        particulars := particulars + tb_LayoutDetailDESCRIPTION.AsString + ' ('+tb_LayoutDetailFABRIC.AsString+ ') ';

        qry_LayoutDetail.Close;
        if tb_LayoutDetailID.IsNull then
        qry_LayoutDetail.SQL[2] := 'WHERE ID = 0'
        else
        begin
          qry_LayoutDetail.SQL[2] := 'WHERE ID = :ID';
          qry_LayoutDetail.ParamByName('ID').Value   := tb_LayoutDetailID.Value;
        end;
        qry_LayoutDetail.Open();

        if tb_LayoutDetailID.IsNull then
        qry_LayoutDetail.Append
        else
        qry_LayoutDetail.Edit;

        qry_LayoutDetailHEADERID.Value    := qry_LayoutID.Value;
        qry_LayoutDetailITEMID.Value      := tb_LayoutDetailITEMID.Value;
        qry_LayoutDetailFABRICID.Value    := tb_LayoutDetailFABRICID.Value;
        qry_LayoutDetailDESCRIPTION.Value := tb_LayoutDetailDESCRIPTION.Value;
        qry_LayoutDetailREMARKS.Value     := tb_LayoutDetailREMARKS.Value;
        qry_LayoutDetailCANCELLED.Value   := False;
        qry_LayoutDetailFABRIC.Value      := tb_LayoutDetailFABRIC.Value;
        qry_LayoutDetail.Post;
        qry_LayoutDetail.ApplyUpdates();

        tb_LayoutDetail.Next;
      end;

      upd_lo.Close;
      upd_lo.SQL[1] := 'SET PARTICULARS  = '''+particulars+'''';
      upd_lo.SQL[2] := 'WHERE ID = '+IntToStr(qry_LayoutID.Value);
      upd_lo.ExecSQL;
    end;

    search;
  end;
end;


procedure Tf_Layout.FormShow(Sender: TObject);
begin
  date_1.Date := StartOfTheMonth(Now);
  date_2.Date := Now;
  cmb_filter.ItemIndex  := 0;
  search;
end;

procedure Tf_Layout.loaddetails;
begin
  with dm_PM do
  begin
    brw_Client.Close;
    brw_Client.SQL[2] := 'WHERE CANCELLED = FALSE';
    brw_Client.Open();

    brw_Garments.Close;
    brw_Garments.SQL[2] := 'WHERE CANCELLED = FALSE';
    brw_Garments.Open();

    brw_GarmentDesc.Close;
    brw_GarmentDesc.SQL[3]  := 'WHERE GAR.CANCELLED = FALSE';
    brw_GarmentDesc.Open();

    brw_Fabrics.Close;
    brw_Fabrics.SQL[2]  := 'WHERE CANCELLED = FALSE';
    brw_Fabrics.Open();
  end;
end;

procedure Tf_Layout.NewExecute(Sender: TObject);
var particulars: string;
begin
  with dm_PM do
  begin

    qry_Layout.Close;
    qry_Layout.SQL[2] := 'WHERE ID = 0';
    qry_Layout.Open();

    qry_Layout.Append;
    qry_LayoutCANCELLED.Value       := False;
    qry_LayoutCREATEDBYID.Value     := userid;
    qry_LayoutCREATEDDATETIME.Value := Now;
    qry_LayoutORDERED.Value         := False;

    tb_LayoutDetail.Close;
    tb_LayoutDetail.Open;

    loaddetails;

    f_LayoutTemp  := Tf_layoutTemp.Create(Self);
    f_LayoutTemp.Caption  := 'New Layout';
    if f_LayoutTemp.ShowModal = mrOk then
    begin

      qry_LayoutPARTICULARS.Value   := ' ';
      qry_Layout.Post;
      qry_Layout.ApplyUpdates();

      tb_LayoutDetail.First;

      while not tb_LayoutDetail.Eof do
      begin
        if tb_LayoutDetail.RecNo <> tb_LayoutDetail.RecordCount then
        particulars := particulars + tb_LayoutDetailDESCRIPTION.AsString + ' ('+tb_LayoutDetailFABRIC.AsString+ ') ' + #13#10
        else
        particulars := particulars + tb_LayoutDetailDESCRIPTION.AsString + ' ('+tb_LayoutDetailFABRIC.AsString+ ') ';

        qry_LayoutDetail.Close;
        qry_LayoutDetail.SQL[2] := 'WHERE ID = 0';
        qry_LayoutDetail.Open();

        qry_LayoutDetail.Append;
        qry_LayoutDetailHEADERID.Value    := qry_LayoutID.Value;
        qry_LayoutDetailITEMID.Value      := tb_LayoutDetailITEMID.Value;
        qry_LayoutDetailFABRICID.Value    := tb_LayoutDetailFABRICID.Value;
        qry_LayoutDetailDESCRIPTION.Value := tb_LayoutDetailDESCRIPTION.Value;
        qry_LayoutDetailREMARKS.Value     := tb_LayoutDetailREMARKS.Value;
        qry_LayoutDetailCANCELLED.Value   := False;
        qry_LayoutDetailFABRIC.Value      := tb_LayoutDetailFABRIC.Value;
        qry_LayoutDetail.Post;
        qry_LayoutDetail.ApplyUpdates();

        tb_LayoutDetail.Next;
      end;

      upd_lo.Close;
      upd_lo.SQL[1] := 'SET PARTICULARS  = '''+particulars+'''';
      upd_lo.SQL[2] := 'WHERE ID = '+IntToStr(qry_LayoutID.Value);
      upd_lo.ExecSQL;
    end;

    search;
  end;
end;

procedure Tf_Layout.search;
begin
  with dm_PM do
  begin
    brw_Layout.Close;
    if cmb_filter.ItemIndex = 0 then
    begin
      brw_Layout.SQL[3] := 'WHERE (LO_HEADER.CREATEDDATETIME BETWEEN :DATE1 AND :DATE2) AND LO_HEADER.ID LIKE :ID AND LO_HEADER.CANCELLED = FALSE';
      brw_Layout.ParamByName('ID').Value  := '%'+Trim(txt_search.Text)+'%';
    end
    else if cmb_filter.ItemIndex = 1 then
    begin
     brw_Layout.SQL[3] := 'WHERE (LO_HEADER.CREATEDDATETIME BETWEEN :DATE1 AND :DATE2) AND LO_HEADER.CLIENT LIKE :CLIENT AND LO_HEADER.CANCELLED = FALSE';
     brw_Layout.ParamByName('CLIENT').Value  := '%'+Trim(txt_search.Text)+'%';
    end
    else if cmb_filter.ItemIndex = 2 then
    begin
     brw_Layout.SQL[3] := 'WHERE (LO_HEADER.CREATEDDATETIME BETWEEN :DATE1 AND :DATE2) AND LO_HEADER.JONO LIKE :ID AND LO_HEADER.CANCELLED = FALSE';
     brw_Layout.ParamByName('ID').Value  := '%'+Trim(txt_search.Text)+'%';
    end
    else if cmb_filter.ItemIndex = 3 then
    begin
     brw_Layout.SQL[3] := 'WHERE (LO_HEADER.CREATEDDATETIME BETWEEN :DATE1 AND :DATE2) AND LO_HEADER.PARTICULARS LIKE :DESC AND LO_HEADER.CANCELLED = FALSE';
     brw_Layout.ParamByName('DESC').Value  := '%'+Trim(txt_search.Text)+'%';
    end;

    brw_Layout.ParamByName('DATE1').Value := FormatDateTime('yyyy-mm-dd hh:nn', StartOfTheDay(date_1.Date));
    brw_Layout.ParamByName('DATE2').Value := FormatDateTime('yyyy-mm-dd hh:nn', EndOfTheDay(date_2.Date));

    brw_Layout.Open;
  end;
end;

procedure Tf_Layout.txt_searchKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
  search;
end;

procedure Tf_Layout.txt_searchRightButtonClick(Sender: TObject);
begin
   search;
end;

end.
